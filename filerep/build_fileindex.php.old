<?php
/**
 *	Build file index
 *		For a complete run, first launch "build_fileindex_reset.php".
 *		This will reset the flag 'index_building' (settings) and clears all dates 'last replicated' on the server's shares
 *	Full run will take about 4h (for me, on a raspberry pi and a total of ~70.000 files (on an external usb drive))
 *	Incremental run takes about 6 minutes
 */
 
set_time_limit(0);
ini_set('max_input_time', 99999);

include 'connection.php';
include 'act_settings.php';
include 'functions.php';



// check if script is already running
//$check = mysql_fetch_array(mysql_query("select value from t_setting where code = 'index_building'", $conn));

// no, continue
//if($check['value'] == '0'){
if($setting_index_building == '0'){
	// mark as running
	mysql_query("update t_setting set value = '1' where code = 'index_building'", $conn);

	echo "Build index started on " . date('Y-m-d H:i:s', time()) . "'\n";
	
	flush();
	
	// insert new (missing) links between shares and server host
	$qry_missing_str = "
		from 
			t_host h
			join t_share s on 1=1
			left join t_host_share hs on hs.id_host = h.id_host and hs.id_share = s.id_share 
		where
			h.id_host = " . $setting_server_id_host . " 
			and s.active = 1
			and hs.id_host_share is null
		";
	$qry_missing = mysql_query("select h.id_host, s.id_share, s.server_directory, s.name " . $qry_missing_str, $conn);
	$qry_insert_missing = mysql_query("
		insert into t_host_share (id_host, id_share, local_directory) 
		select h.id_host, s.id_share, s.server_directory " .
		$qry_missing_str
		, $conn);
		
	while ($missing = mysql_fetch_array($qry_missing)) {
		echo "New share '" . $missing{'name'} . "' (" . $missing{'server_directory'} . ") added\n";
	}
	
	flush();
	
	$qry_shares = mysql_query("
		select
			s.id_share,
			s.name,
			s.info,
			s.server_directory,
			hs.id_host_share,
			hs.id_host,
			hs.local_directory,
			hs.date_linked_since,
			hs.date_last_replicated
		from t_share s
		join t_host_share hs on hs.id_share = s.id_share
			and hs.active = 1
			and hs.id_host = " . $setting_server_id_host . " 
		where
			s.active = 1
		order by s.id_share
		", $conn);
		

	$id_share = -1;

	while ($share = mysql_fetch_array($qry_shares)) {
		$id_share = $share{'id_share'};
		$dir = $share{'server_directory'};
		$date_last_replicated = $share{'date_last_replicated'};
		
		// make db timestamp into unix time
		$date_last_replicated = str_replace('-', '/', $date_last_replicated);
		$date_last_replicated = explode('.', $date_last_replicated)[0];
		$date_last_replicated = strtotime($date_last_replicated);
		
		if($date_last_replicated == '' || $date_last_replicated == null){
			$date_last_replicated = 0;
		}
		
		$date_start = time();
		
		
		echo "Share '" . $share{'name'} . "' (" . $share{'server_directory'} . ") (check since " . $share{'date_last_replicated'} . ")\n";
		echo " -> started on " . date('Y-m-d H:i:s', time()) . "'\n";
		//echo " -> modified since " . date('Y-m-d H:i:s', $date_last_replicated) . "'\n";
		//echo " -> modified since " . $share{'date_last_replicated'} . "'\n";
			
		flush();
		
		// get files per share (that already exist of cource)
		$qry_files = mysql_query("
			select
				f.id_file,
				f.filename,
				f.relative_directory,
				f.size,
				f.version,
				f.date_last_modified,
				f.date_deleted,
				f.active
			from t_file f
			where
				f.id_share = " . $id_share . "
			", $conn);
		
		echo " -> " . mysql_num_rows($qry_files) . " files in DB\n";
			
		flush();
		
		// get files in the share directory
		$files = [];
		//$filesfound = list_dir_shell($files, $dir, $date_last_replicated, 0);
		$filesfound = list_dir_shell($files, $dir, 0, 0);
		
		if($filesfound){
			
			if(count($files) > 0){
				echo " -> " . count($files) . " files on disk (changed since last replication)\n";
			}
			
			flush();
			
			$modifiedcount = 0;
			
			while ($dbfile = mysql_fetch_array($qry_files)) {
				
				$file_found = 0;
				$file_valid = 0;
				
				// make db timestamp into unix time
				$date_last_modified = $dbfile['date_last_modified'];
				$date_last_modified = str_replace('-', '/', $date_last_modified);
				$date_last_modified = explode('.', $date_last_modified)[0];
				$date_last_modified = strtotime($date_last_modified);
				
				$filecount = count($files);
				for ($i = 0; $i < $filecount; $i++) {
					
					//$extension = substr( $files[$i]['nativepath'], strrpos( $files[$i]['nativepath'], '.') );
					$extarr = explode('.', $files[$i]['nativepath']);
					$extension = '.' . $extarr[count($extarr) - 1];
					
					// file marked as deleted, ignore
					if($extension == '.deleted'){
						$file_found = 3;
						break;
					}
					// file is being uploaded, ignore
					else if(substr($extension, 0, 8) == '.filerep'){
						$file_found = 2;
						
						// if modification date some time in the past, delete (faulty upload)
						// default: more than 1 day old
						if(/*$share{'id_share'} == 6 &&*/ $files[$i]['modified_cest'] < time() - (3600 * 24)){
							echo " -> deleting temporary upload file " . $files[$i]['nativepath'] . "\n";
							unlink($files[$i]['nativepath']);
						}
						
						break;
					}
					
					// file found in db
					else if($dir . $dbfile['relative_directory'] /*. $dbfile['filename']*/ == $files[$i]['nativepath']){
						$file_found = 1;
						
						// file deleted, but not yet on server
						if($dbfile['active'] == 0){
							$file_found = 4;
							//if($share{'id_share'} == 6){
								echo " -> deleting file " . $files[$i]['nativepath'] . "\n";
								//shell_exec('mv "' . $files[$i]['nativepath'] . '" "' . $files[$i]['nativepath'] . '.deleted"');
							//}
							break;
						}
						// file is modified
						else if($date_last_modified != $files[$i]['modified_cest']){
							// update file in db
							
                            $file_valid = 1;
                            
							$modifiedcount++;
							$modlog = 'old modification date: ' . $date_last_modified . ', new modification date: ' . $files[$i]['modified_cest'];
							
							/*mysql_query("
								insert into t_file_log
								(
									id_file,
									id_host,
									date_log,
									text_log,
									
									size,
									version,
									date_last_modified
								)
								values
								(
									" . $dbfile['id_file'] . ",
									" . $setting_server_id_host . ",
									now(),
									'File modified on server: " . mysql_real_escape_string($modlog) . "',
									
									" . $files[$i]['size'] . ",
									" . ($dbfile['version'] + 1) . ",
									'" . date('Y-m-d H:i:s', $files[$i]['modified_cest']) . "'
								)
								", $conn);*/
								
							mysql_query("
								update t_file 
								set
									size = " . $files[$i]['size'] . ",
									version = version + 1,
									date_last_modified = '" . date('Y-m-d H:i:s', $files[$i]['modified_cest']) . "'
								where
									id_file = " . $dbfile['id_file'] . "
								", $conn);
								
						}
                        else {
                            $file_valid = 2;
						}
                        break;
					}
					
				}
				
				// file found in db:
				if($file_found > 0){
					// remove from files list 
					unset($files[$i]);
					$files = array_values($files);
					
					if($file_found == 1){
						// and mark as checked
						mysql_query("
							update t_file 
							set date_last_checked = now(), active = 1
							where
								id_file = " . $dbfile['id_file'] . "
							", $conn);
					}
				}
				// file not found after index was reset (all files checked on dir)
				else if($file_valid == 0 && $dbfile['active'] == 1 /*&& $date_last_replicated == 0*/){
					// check deleted
					/*mysql_query("
						update t_file 
						set
							date_deleted_check = now()
							#active = 0
						where
							id_file = " . $dbfile['id_file'] . "
							and date_deleted_check is not null
						", $conn);
					*/
					
					// mark as deleted
					mysql_query("
						update t_file 
						set
							date_deleted = now(),
							active = 0
						where
							id_file = " . $dbfile['id_file'] . "
						", $conn);
					
					/*mysql_query("
						insert into t_file_log
						(
							id_file,
							id_host,
							date_log,
							text_log,
							
							size,
							version,
							date_last_modified
						)
						values
						(
							" . $dbfile['id_file'] . ",
							" . $setting_server_id_host . ",
							now(),
							'File deleted on server',
							
							" . $files[$i]['size'] . ",
							" . ($dbfile['version']) . ",
							'" . date('Y-m-d H:i:s', $files[$i]['modified_cest']) . "'
						)
						", $conn);*/
					
				}
			}
			
			if($modifiedcount > 0){
				echo " -> " . $modifiedcount . " files updated\n";
			}
			
			// files not in db: add
			$filecount = count($files);
			
			if($filecount > 0){
				echo " -> " . $filecount . " new files found on disk\n";
			}
			
			flush();
			
			for ($i = 0; $i < $filecount; $i++) {
				
				$reldir = $files[$i]['nativepath'];
				//$reldir = str_replace($dir, '', $reldir, 1);
				
				// remove server dir - only first instance
				//$reldir = preg_replace($dir, '', $reldir, 1);
				$reldir = implode('', explode($dir, $reldir, 2));
				
				// remove file name - only last instance
				//$reldir = strrev(implode(strrev(''), explode($files[$i]['name'], strrev($reldir), 2)));
				
				mysql_query("
					insert into t_file
					(
						id_share,
						filename ,
						relative_directory,
						size,
						version,
						date_last_modified
					)
					values
					(
						" . $id_share . ",
						'" . mysql_real_escape_string($files[$i]['name']) . "',
						'" . mysql_real_escape_string($reldir) . "',
						" . $files[$i]['size'] . ",
						1,
						'" . date('Y-m-d H:i:s', $files[$i]['modified_cest']) . "'
					)
					", $conn);
				$new_id_file = mysql_insert_id($conn);
				
				/*mysql_query("
					insert into t_file_log
					(
						id_file,
						id_host,
						date_log,
						text_log,
						
						size,
						version,
						date_last_modified
					)
					values
					(
						" . $new_id_file . ",
						" . $setting_server_id_host . ",
						now(),
						'File located on server',
						
						" . $files[$i]['size'] . ",
						1,
						'" . date('Y-m-d H:i:s', $files[$i]['modified_cest']) . "'
					)
					", $conn);*/
			}
			
			
			// update share stats
			mysql_query("
				update t_share
				set
					total_files = (select count(id_file) from t_file where id_share = " . $id_share . " and active = 1),
					total_filesize = (select sum(ifnull(size,0)) from t_file where id_share = " . $id_share . " and active = 1),
					date_last_modified = (select max(date_last_modified) from t_file where id_share = " . $id_share . " and active = 1),
					
					total_files_inactive = (select count(id_file) from t_file where id_share = " . $id_share . " and active = 0),
					total_filesize_inactive = (select sum(ifnull(size,0)) from t_file where id_share = " . $id_share . " and active = 0),
						
					hosts_linked = (select count(id_host_share) from t_host_share where id_share = " . $id_share . " and id_host <> " . $setting_server_id_host . " and active = 1),
					hosts_linked_inactive = (select count(id_host_share) from t_host_share where id_share = " . $id_share . " and id_host <> " . $setting_server_id_host . " and active = 0)
					
				where
					id_share = " . $id_share . "
				", $conn);
			
			$diskspace_total = disk_total_space($share['server_directory']);
			$diskspace_free = disk_free_space($share['server_directory']);
			
			// could not check disk space (false => 0)
			if($diskspace_total === false){
				$diskspace_total = 0;
			}
			if($diskspace_free === false){
				$diskspace_free = 0;
			}
			
			// set date last replicated on share
			mysql_query("
				update t_host_share
				set
					date_last_replicated = '" . date('Y-m-d H:i:s', $date_start) . "',
					diskspace_total = " . $diskspace_total . ",
					diskspace_free = " . $diskspace_free . "
				where
					active = 1
					and id_share = " . $id_share . "
					and id_host = " . $setting_server_id_host . " 
				", $conn);
			
			//echo "Share '" . $share{'name'} . "' done\n";
			echo " -> finished on " . date('Y-m-d H:i:s', time()) . "'\n";
			
		}
		// $filesfound = false
		else {
			echo ' -> ERROR: could not read directory "' . $dir . '" on ' . date('Y-m-d H:i:s', time()) . "'\n";
			
		}
		echo "\n";
		
	}
	
	// script is done, unmark as running
	mysql_query("update t_setting set value = '0' where code = 'index_building'", $conn);
	
}

?>